/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-01-18 19:14:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.docente;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import controlador.Conexion;
import controlador.DocenteDAO;
import modelo.Asistencia;
import modelo.Usuario;
import java.sql.Connection;
import java.util.Map;
import java.util.HashMap;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Date;
import java.text.SimpleDateFormat;

public final class procesar_005fasistencia_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Procesar Asistencia - Docente</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Enlace a la hoja de estilos de Bootstrap y DatePicker -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css\">\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f4f4f9;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header {\r\n");
      out.write("            background-color: #004d99;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header h1 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 2.5em;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            width: 80%;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            padding: 40px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container {\r\n");
      out.write("            background-color: #ffffff;\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container h2 {\r\n");
      out.write("            color: #004d99;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-group {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-primary {\r\n");
      out.write("            background-color: #004d99;\r\n");
      out.write("            border-color: #003366;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-primary:hover {\r\n");
      out.write("            background-color: #003366;\r\n");
      out.write("            border-color: #002244;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .footer {\r\n");
      out.write("            background-color: #004d99;\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .footer a {\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .footer a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .success-message {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-top: 40px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-back {\r\n");
      out.write("            background-color: #86b3db;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 1.2em;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .btn-back:hover {\r\n");
      out.write("            background-color: #215888;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("    <!-- Scripts de jQuery y DatePicker -->\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        $(document).ready(function(){\r\n");
      out.write("            // Inicializar el datetimepicker\r\n");
      out.write("            $('#fecha_asistencia').datepicker({\r\n");
      out.write("                format: 'yyyy-mm-dd',\r\n");
      out.write("                autoclose: true\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <header>\r\n");
      out.write("        <h1>Procesar Asistencia - Docente</h1>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        ");

            // Verificar si el usuario estÃ¡ en sesiÃ³n
            Usuario usuario = (Usuario) session.getAttribute("usuario");
            if (usuario == null) {
                response.sendRedirect("../index.jsp"); // Redirigir al login si no hay usuario
            }

            // Obtener los valores del formulario
            Map<Integer, String> asistencia = new HashMap<Integer, String>(); // Cambiado para compatibilidad con Java 6
            String fechaAsistencia = request.getParameter("fecha_asistencia");

            // Validar que la fecha no sea nula o vacÃ­a
            if (fechaAsistencia == null || fechaAsistencia.trim().isEmpty()) {
                out.println("<p>La fecha de asistencia es obligatoria.</p>");
                return;
            }

            // Convertir la fecha a formato SQL
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date fecha = null;
            try {
                fecha = new Date(dateFormat.parse(fechaAsistencia).getTime());
            } catch (Exception e) {
                out.println("<p>Error al procesar la fecha: " + e.getMessage() + "</p>");
                return;
            }

            // Inicializar conexiÃ³n a la base de datos
            Conexion conexionDB = new Conexion();
            Connection conexion = conexionDB.conectar();
            if (conexion != null) {
                DocenteDAO docenteDAO = new DocenteDAO(conexion);

                // Obtener el id del curso (esto puede venir del docente o de una variable de sesiÃ³n)
                int idCurso = 1; // Este debe ser el id del curso correspondiente

                // Registrar asistencia para cada estudiante
                for (String key : request.getParameterMap().keySet()) {
                    if (key.startsWith("estado_")) {
                        // El nombre del parÃ¡metro es "estado_<id_usuario>"
                        int idEstudiante = Integer.parseInt(key.substring(7)); // Extraer el id del estudiante
                        String estado = request.getParameter(key);
                        asistencia.put(idEstudiante, estado);
                    }
                }

                for (Map.Entry<Integer, String> entry : asistencia.entrySet()) {
                    int idEstudiante = entry.getKey();
                    String estado = entry.getValue();

                    // Crear un objeto Asistencia para cada estudiante
                    Asistencia nuevaAsistencia = new Asistencia(idEstudiante, idCurso, fecha, estado);

                    // Registrar la asistencia en la base de datos
                    String sql = "INSERT INTO asistencias (id_usuario, id_curso, fecha, estado) VALUES (?, ?, ?, ?)";
                    try {
                        PreparedStatement ps = conexion.prepareStatement(sql);
                        ps.setInt(1, nuevaAsistencia.getIdUsuario());
                        ps.setInt(2, nuevaAsistencia.getIdCurso());
                        ps.setDate(3, nuevaAsistencia.getFecha());
                        ps.setString(4, nuevaAsistencia.getEstado());
                        ps.executeUpdate();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }

                // Mostrar mensaje de Ã©xito
                out.println("<div class='success-message'>");
                out.println("<p class='alert alert-success'>Asistencia registrada correctamente.</p>");
                out.println("<a href='asistencia.jsp' class='btn-back'>Volver a la gestion de asistencia</a>");
                out.println("</div>");
            } else {
                out.println("<p class='alert alert-danger'>Error al conectar con la base de datos.</p>");
                out.println("<a href='asistencia.jsp' class='btn-back'>Volver a la gestion de asistencia</a>");
            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <footer class=\"footer\">\r\n");
      out.write("        <p>&copy; 2025 Proyecto GestiÃ³n Suarez. Todos los derechos reservados. <a href=\"asistencia.jsp\">Volver a la gestiÃ³n de asistencia</a></p>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
